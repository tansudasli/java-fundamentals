plugins {
    id 'java'   //java, java-library, application
//    id 'application' //adds the run task. also add Application {main-class}
//    id 'java-library' //adds the api command!
    id "me.champeau.jmh" version "0.6.7"   //jmh benchmarking plugin
}

//group 'org.example'
version '1.0-SNAPSHOT'
java.sourceCompatibility JavaVersion.VERSION_17

/* for multiple modules, inject into related build.gradle
 * add below to use 'java -jar ..' command!
 * else use 'gradle run' or 'java -cp ...jar className'
 */
//jar {
//    manifest {
//        attributes('Implementation-Title': 'Gradle Sandbox',
//                'Implementation-Version': archiveVersion,
////                   'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
//                'Main-Class': 'HelloWorld')
//
//    }
//}

// for gradle run task
// Define the (full path) main class for the application.
//application {
//
//    mainClass = 'core.Variables'
//}

repositories {
    mavenCentral()
}


dependencies {
    /**
     * dependency, for build/run tasks
     * but, java commands, use -cp to add core project jar!!
     */
//    implementation project(':core')


    // for src/test folder related libs
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    testImplementation 'org.openjdk.jmh:jmh-core:1.35'
    testImplementation 'org.openjdk.jmh:jmh-generator-annprocess:1.35'

    //for src.jmh folder.. package names must be same!
    jmh 'org.openjdk.jmh:jmh-core:1.35'
    jmh 'org.openjdk.jmh:jmh-generator-annprocess:1.35'

    //that solves the missing /META-INF/BenchmarkList error
    jmhAnnotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.35'
}

//java micro benchmarks
//jmh {
//    warmupIterations = 1
//    iterations = 1
//    fork = 1
//    includeTests = true
//}

//test is already registered task. so you can inject like below!
test  {
    //for junit5
    useJUnitPlatform()
}
